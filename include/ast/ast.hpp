#pragma once

#include "ast_assignment_operator.hpp"
#include "ast_assignment_statement.hpp"
#include "ast_binary_operator.hpp"
#include "ast_branch_statement.hpp"
#include "ast_constant.hpp"
#include "ast_compound_statement.hpp"
#include "ast_declaration_specifier.hpp"
#include "ast_declaration_statement.hpp"
#include "ast_declaration.hpp"
#include "ast_expression.hpp"
#include "ast_function.hpp"
#include "ast_init_declaration_list.hpp"
#include "ast_iteration_statement.hpp"
#include "ast_primitive_type.hpp"
#include "ast_return_statement.hpp"
#include "ast_statement_list.hpp"
#include "ast_statement.hpp"
#include "ast_translation_unit.hpp"
#include "ast_types.hpp"
#include "ast_unary_operator.hpp"
#include "ast_expression_list.hpp"
#include "ast_expression_statement.hpp"
#include "ast_assignment_expression.hpp"
#include "ast_struct_specifier.hpp"
#include "ast_declaration_statement_list.hpp"
#include "ast_enum_specifier.hpp"
#include "ast_enum_list.hpp"
#include "ast_enumerator.hpp"
#include "ast_jump_statement.hpp"
#include "ast_typedef_statement.hpp"
#include "ast_array_initializer_list.hpp"

extern Node *parseAST();
